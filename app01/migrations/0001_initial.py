# Generated by Django 4.1.3 on 2025-08-23 00:32

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_name', models.CharField(help_text='用户名必须唯一', max_length=32, null=True, unique=True, verbose_name='用户名')),
                ('user_type', models.CharField(choices=[('sales', '销售人员'), ('admin', '总管理员')], default='sales', max_length=10)),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='联系电话')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='联系邮箱')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='customuser_set', related_query_name='customuser', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_permissions_set', related_query_name='customuser_permission', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '销售人员',
                'verbose_name_plural': '销售人员',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('client_id', models.AutoField(primary_key=True, serialize=False, verbose_name='客户编号')),
                ('name', models.CharField(max_length=100, verbose_name='客户名称')),
                ('contact_person', models.CharField(max_length=50, null=True, verbose_name='客户联系人')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='联系电话')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='电子邮箱')),
                ('address', models.TextField(blank=True, null=True, verbose_name='客户地址')),
                ('industry', models.CharField(blank=True, max_length=50, null=True, verbose_name='所属行业')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('assigned_salesperson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clients', to=settings.AUTH_USER_MODEL, verbose_name='负责销售人员')),
            ],
            options={
                'verbose_name': '客户信息',
                'verbose_name_plural': '客户信息',
            },
        ),
        migrations.CreateModel(
            name='companyInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='企业名称')),
                ('Tele', models.CharField(max_length=16, verbose_name='联系电话')),
                ('email', models.CharField(max_length=16, null=True, verbose_name='联系邮箱')),
                ('manager', models.CharField(max_length=16, null=True, verbose_name='管理者姓名')),
                ('gender', models.SmallIntegerField(choices=[(1, '男'), (2, '女')], default=1, null=True, verbose_name='性别')),
                ('adress', models.CharField(max_length=255, null=True, verbose_name='企业地址')),
                ('password', models.CharField(max_length=64, null=True, verbose_name='用于查询历史记录的密码')),
                ('token', models.CharField(max_length=64, null=True, verbose_name='认证码')),
                ('openid', models.CharField(max_length=64, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='机器型号')),
                ('machine_id', models.CharField(max_length=32, null=True, verbose_name='机器编号')),
            ],
        ),
        migrations.CreateModel(
            name='ManagerInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='管理者姓名')),
                ('account', models.CharField(max_length=16, verbose_name='管理者账号')),
                ('password', models.CharField(max_length=32, verbose_name='管理者密码')),
                ('token', models.CharField(max_length=64, null=True, verbose_name='认证码')),
            ],
        ),
        migrations.CreateModel(
            name='RepairOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=32, null=True, unique=True, verbose_name='报修单号')),
                ('customer_name', models.CharField(max_length=32, verbose_name='企业名称')),
                ('responsible_name', models.CharField(max_length=32, null=True, verbose_name='负责人姓名')),
                ('customer_phone', models.CharField(max_length=20, verbose_name='联系方式')),
                ('emergency_level', models.CharField(choices=[('low', '一般'), ('medium', '紧急'), ('high', '加急')], max_length=10, verbose_name='紧急程度')),
                ('machine_model', models.CharField(max_length=50, null=True, verbose_name='机器型号')),
                ('machine_id', models.CharField(max_length=50, null=True, verbose_name='机器编号')),
                ('purchase_date', models.CharField(max_length=16, null=True, verbose_name='购买日期')),
                ('repair_date', models.DateField(null=True, verbose_name='报修日期')),
                ('repair_images', models.JSONField(blank=True, default=list, null=True, verbose_name='上传文件')),
                ('description', models.TextField(null=True, verbose_name='故障描述')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('status', models.IntegerField(choices=[(0, '待受理'), (1, '待处理'), (2, '处理中'), (3, '已完成')], default=0, verbose_name='订单状态')),
                ('dispatch_status', models.IntegerField(choices=[(0, '未派遣'), (1, '已派遣')], default=0, verbose_name='派遣状态')),
                ('quotation_status', models.IntegerField(choices=[(0, '未报价'), (1, '已报价'), (2, '保内无需报价')], default=0, verbose_name='报价状态')),
                ('process_date', models.CharField(max_length=16, null=True, verbose_name='开始处理时间')),
                ('finished_date', models.CharField(max_length=16, null=True, verbose_name='处理完成时间')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='companies', to='app01.companyinfo', verbose_name='表单拥有者')),
            ],
        ),
        migrations.CreateModel(
            name='workerInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, verbose_name='姓名')),
                ('Tele', models.CharField(max_length=16, null=True, verbose_name='联系电话')),
                ('password', models.CharField(max_length=64, verbose_name='密码')),
                ('openid', models.CharField(max_length=64, null=True)),
                ('token', models.CharField(max_length=64, null=True, verbose_name='认证码')),
            ],
        ),
        migrations.CreateModel(
            name='WeeklyReport',
            fields=[
                ('report_id', models.AutoField(primary_key=True, serialize=False, verbose_name='周报表编号')),
                ('week_start', models.DateField(verbose_name='周开始日期')),
                ('week_end', models.DateField(verbose_name='周结束日期')),
                ('team', models.CharField(blank=True, max_length=100, null=True, verbose_name='所属团队')),
                ('weekly_sales', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='本周销售额')),
                ('last_week_sales', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='上周销售额')),
                ('weekly_target', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='本周目标销售额')),
                ('equipment_sold', models.IntegerField(blank=True, null=True, verbose_name='本周销售设备数量')),
                ('equipment_details', models.JSONField(blank=True, null=True, verbose_name='设备销售详情')),
                ('new_clients_count', models.IntegerField(blank=True, null=True, verbose_name='新开发客户数量')),
                ('new_clients_details', models.JSONField(blank=True, null=True, verbose_name='新客户详情')),
                ('existing_clients_visited', models.IntegerField(blank=True, null=True, verbose_name='回访老客户数量')),
                ('next_week_sales_target', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='下周销售额目标')),
                ('next_week_equipment_target', models.IntegerField(blank=True, null=True, verbose_name='下周销售设备数量目标')),
                ('next_week_new_clients_target', models.IntegerField(blank=True, null=True, verbose_name='下周新客户开发数量目标')),
                ('next_week_repeat_purchase_target', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='下周老客户复购金额目标')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weekly_reports', to=settings.AUTH_USER_MODEL, verbose_name='填报人')),
            ],
            options={
                'verbose_name': '周报表',
                'verbose_name_plural': '周报表',
            },
        ),
        migrations.CreateModel(
            name='VisitRecord',
            fields=[
                ('record_id', models.AutoField(primary_key=True, serialize=False, verbose_name='拜访记录编号')),
                ('visit_date', models.DateField(verbose_name='拜访日期')),
                ('purpose', models.CharField(blank=True, choices=[('usage', '了解客户设备使用情况'), ('promotion', '推广新设备产品'), ('project', '洽谈合作项目'), ('complaint', '处理客户投诉')], max_length=100, null=True, verbose_name='拜访目的')),
                ('method', models.CharField(blank=True, choices=[('onsite', '上门拜访'), ('phone', '电话拜访'), ('video', '视频会议'), ('other', '其他')], max_length=50, null=True, verbose_name='拜访方式')),
                ('custom_method', models.CharField(blank=True, max_length=100, null=True, verbose_name='自定义拜访方式')),
                ('planned_duration', models.FloatField(blank=True, null=True, verbose_name='预计拜访时长(小时)')),
                ('actual_duration', models.FloatField(blank=True, null=True, verbose_name='实际拜访时长(小时)')),
                ('has_purchase_plan', models.BooleanField(default=False, verbose_name='有采购新设备计划')),
                ('purchase_time', models.DateField(blank=True, null=True, verbose_name='计划采购时间')),
                ('required_equipment', models.TextField(blank=True, null=True, verbose_name='需求设备类型及规格')),
                ('special_requirements', models.TextField(blank=True, null=True, verbose_name='特殊需求或关注点')),
                ('feedback_on_products', models.TextField(blank=True, null=True, verbose_name='对公司现有设备产品的看法')),
                ('competitor_satisfaction', models.TextField(blank=True, null=True, verbose_name='对手服务的满意度')),
                ('other_comments', models.TextField(blank=True, null=True, verbose_name='其他意见或建议')),
                ('featured_products', models.TextField(blank=True, null=True, verbose_name='本次重点介绍的设备产品')),
                ('solutions_provided', models.TextField(blank=True, null=True, verbose_name='产品优势与解决方案')),
                ('cooperation_intention', models.CharField(choices=[('high', '高'), ('medium', '中'), ('low', '低'), ('none', '无')], max_length=20, verbose_name='合作意向程度')),
                ('next_steps', models.TextField(null=True, verbose_name='下一步行动')),
                ('issues_encountered', models.TextField(blank=True, null=True, verbose_name='拜访过程中遇到的问题')),
                ('proposed_solutions', models.TextField(blank=True, null=True, verbose_name='针对问题的解决建议')),
                ('other_message', models.TextField(blank=True, null=True, verbose_name='其他信息')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visit_records', to='app01.client', verbose_name='客户')),
                ('salesperson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visit_records', to=settings.AUTH_USER_MODEL, verbose_name='销售人员')),
            ],
            options={
                'verbose_name': '拜访记录',
                'verbose_name_plural': '拜访记录',
                'ordering': ['-visit_date'],
            },
        ),
        migrations.CreateModel(
            name='SellsQuotation',
            fields=[
                ('quotation', models.AutoField(primary_key=True, serialize=False, verbose_name='报价编号')),
                ('name', models.CharField(max_length=100, verbose_name='设备名称')),
                ('unit_price', models.IntegerField(verbose_name='单价')),
                ('quotation_date', models.DateField(null=True, verbose_name='报价日期')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sells_quotations', to='app01.client', verbose_name='客户')),
            ],
            options={
                'verbose_name': '报价记录',
                'verbose_name_plural': '报价记录',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report', models.TextField(null=True, verbose_name='完成报告')),
                ('finished_images', models.JSONField(blank=True, default=list, null=True, verbose_name='完成文件')),
                ('confirm_status', models.IntegerField(choices=[(0, '未确认'), (1, '已确认')], default=0, verbose_name='确认状态')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('repairOrder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='app01.repairorder', verbose_name='对应报修单')),
            ],
        ),
        migrations.AddField(
            model_name='repairorder',
            name='worker',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='repairOrders', to='app01.workerinfo', verbose_name='负责工作人员'),
        ),
        migrations.CreateModel(
            name='RepairAdvice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('companyName', models.CharField(max_length=50, null=True, verbose_name='企业名称')),
                ('customer_name', models.CharField(max_length=50, verbose_name='姓名')),
                ('customer_phone', models.CharField(max_length=20, verbose_name='联系方式')),
                ('satisfaction', models.IntegerField(choices=[(3, '满意'), (2, '一般'), (1, '不满意')], null=True, verbose_name='满意度')),
                ('status', models.IntegerField(choices=[(1, '待回复'), (2, '已回复')], default=1, null=True, verbose_name='回复状态')),
                ('advice', models.TextField(blank=True, verbose_name='反馈说明')),
                ('reply', models.TextField(blank=True, null=True, verbose_name='反馈回复')),
                ('reply_date', models.DateTimeField(null=True, verbose_name='回复日期')),
                ('images', models.JSONField(blank=True, default=list, null=True, verbose_name='上传图片')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='提交时间')),
                ('created_by', models.CharField(max_length=16, verbose_name='表单上传者')),
                ('repair_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='repairs', to='app01.repairorder', verbose_name='关联报修单')),
            ],
        ),
        migrations.CreateModel(
            name='Quotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quotation', models.JSONField(blank=True, default=list, null=True, verbose_name='报价内容')),
                ('file_position', models.CharField(max_length=128, null=True, verbose_name='报价单存储位置')),
                ('responsible_manager', models.CharField(max_length=16, verbose_name='报价负责人')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('repairOrder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Quotations', to='app01.repairorder', verbose_name='对应报修单')),
            ],
        ),
        migrations.CreateModel(
            name='FollowUpPlan',
            fields=[
                ('plan_id', models.AutoField(primary_key=True, serialize=False, verbose_name='计划编号')),
                ('follow_up_date', models.DateField(verbose_name='跟进时间')),
                ('expected_outcome', models.TextField(verbose_name='预期达成目标')),
                ('responsible_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follow_up_plans', to=settings.AUTH_USER_MODEL, verbose_name='跟进负责人')),
                ('visit_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follow_up_plans', to='app01.visitrecord', verbose_name='拜访记录')),
            ],
            options={
                'verbose_name': '跟进计划',
                'verbose_name_plural': '跟进计划',
            },
        ),
        migrations.CreateModel(
            name='Competitor',
            fields=[
                ('competitor_id', models.AutoField(primary_key=True, serialize=False, verbose_name='竞争对手编号')),
                ('name', models.CharField(max_length=100, verbose_name='竞争对手名称')),
                ('advantages', models.TextField(blank=True, null=True, verbose_name='竞争对手产品优势')),
                ('comparison', models.TextField(blank=True, null=True, verbose_name='与本公司产品对比')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitors', to='app01.client', verbose_name='客户')),
            ],
            options={
                'verbose_name': '竞争对手信息',
                'verbose_name_plural': '竞争对手信息',
            },
        ),
        migrations.AddField(
            model_name='companyinfo',
            name='machine',
            field=models.ManyToManyField(to='app01.machine', verbose_name='所购机器'),
        ),
        migrations.CreateModel(
            name='ClientPurchase',
            fields=[
                ('Purchase_id', models.AutoField(primary_key=True, serialize=False, verbose_name='记录编号')),
                ('name', models.CharField(max_length=100, verbose_name='设备名称')),
                ('count', models.IntegerField(blank=True, null=True, verbose_name='购买数量')),
                ('purchase_date', models.DateField(blank=True, null=True, verbose_name='购买日期')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase', to='app01.client', verbose_name='客户')),
            ],
            options={
                'verbose_name': '客户购买记录',
                'verbose_name_plural': '客户购买记录',
            },
        ),
        migrations.CreateModel(
            name='ClientGeneration',
            fields=[
                ('generation_id', models.AutoField(primary_key=True, serialize=False, verbose_name='产品编号')),
                ('name', models.CharField(max_length=100, verbose_name='产品名称')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generations', to='app01.client', verbose_name='客户')),
            ],
            options={
                'verbose_name': '客户所做产品',
                'verbose_name_plural': '客户所做产品',
            },
        ),
        migrations.CreateModel(
            name='ClientEquipment',
            fields=[
                ('equipment_id', models.AutoField(primary_key=True, serialize=False, verbose_name='设备编号')),
                ('model', models.CharField(max_length=100, verbose_name='设备型号')),
                ('years_in_use', models.IntegerField(blank=True, null=True, verbose_name='使用年限')),
                ('condition', models.CharField(choices=[('good', '良好'), ('fair', '一般'), ('poor', '存在故障')], max_length=50, verbose_name='运行状况')),
                ('condition_description', models.TextField(blank=True, null=True, verbose_name='运行状况描述')),
                ('evaluation', models.TextField(null=True, verbose_name='对现有设备的评价')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipments', to='app01.client', verbose_name='客户')),
            ],
            options={
                'verbose_name': '客户设备信息',
                'verbose_name_plural': '客户设备信息',
            },
        ),
        migrations.CreateModel(
            name='ClientContact',
            fields=[
                ('contact_id', models.AutoField(primary_key=True, serialize=False, verbose_name='联系人编号')),
                ('name', models.CharField(max_length=100, verbose_name='联系人名称')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='联系人电话')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='app01.client', verbose_name='客户')),
            ],
            options={
                'verbose_name': '客户联系人',
                'verbose_name_plural': '客户联系人',
            },
        ),
        migrations.CreateModel(
            name='AnnualPlan',
            fields=[
                ('plan_id', models.AutoField(primary_key=True, serialize=False, verbose_name='计划编号')),
                ('year', models.IntegerField(unique=True, verbose_name='计划年度')),
                ('total_sales_target', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='总计划销售额')),
                ('sqz_target', models.IntegerField(blank=True, null=True, verbose_name='SQZ系列钻靶机售卖数量')),
                ('qz_target', models.IntegerField(blank=True, null=True, verbose_name='QZ系列钻靶机售卖数量')),
                ('ol_target', models.IntegerField(blank=True, null=True, verbose_name='OL连线系列钻靶机售卖数量')),
                ('ro_target', models.IntegerField(blank=True, null=True, verbose_name='Ro机器人系列钻靶机售卖数量')),
                ('new_clients_target', models.IntegerField(blank=True, null=True, verbose_name='新客户开发数量')),
                ('inner_layer_market_share', models.IntegerField(blank=True, null=True, verbose_name='内层市场份额目标(%)')),
                ('high_end_metal_market_share', models.IntegerField(blank=True, null=True, verbose_name='高端金属市场份额目标(%)')),
                ('q1_sales_target', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='第一季度目标金额')),
                ('q2_sales_target', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='第二季度目标金额')),
                ('q3_sales_target', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='第三季度目标金额')),
                ('q4_sales_target', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='第四季度目标金额')),
                ('q1_equipment_target', models.IntegerField(blank=True, null=True, verbose_name='第一季度销售设备数量')),
                ('q2_equipment_target', models.IntegerField(blank=True, null=True, verbose_name='第二季度销售设备数量')),
                ('q3_equipment_target', models.IntegerField(blank=True, null=True, verbose_name='第三季度销售设备数量')),
                ('q4_equipment_target', models.IntegerField(blank=True, null=True, verbose_name='第四季度销售设备数量')),
                ('q1_new_clients_target', models.IntegerField(blank=True, null=True, verbose_name='第一季度新客户开发数量')),
                ('q2_new_clients_target', models.IntegerField(blank=True, null=True, verbose_name='第二季度新客户开发数量')),
                ('q3_new_clients_target', models.IntegerField(blank=True, null=True, verbose_name='第三季度新客户开发数量')),
                ('q4_new_clients_target', models.IntegerField(blank=True, null=True, verbose_name='第四季度新客户开发数量')),
                ('personnel_targets', models.JSONField(blank=True, null=True, verbose_name='人员目标')),
                ('market_analysis', models.TextField(blank=True, null=True, verbose_name='市场分析')),
                ('competitor_analysis', models.TextField(blank=True, null=True, verbose_name='竞争对手分析')),
                ('customer_insights', models.TextField(blank=True, null=True, verbose_name='客户需求洞察')),
                ('product_strategy', models.TextField(blank=True, null=True, verbose_name='产品策略')),
                ('pricing_strategy', models.TextField(blank=True, null=True, verbose_name='价格策略')),
                ('channel_strategy', models.TextField(blank=True, null=True, verbose_name='渠道策略')),
                ('promotion_strategy', models.TextField(blank=True, null=True, verbose_name='促销策略')),
                ('phase1_plan', models.TextField(blank=True, null=True, verbose_name='第一阶段计划')),
                ('phase2_plan', models.TextField(blank=True, null=True, verbose_name='第二阶段计划')),
                ('phase3_plan', models.TextField(blank=True, null=True, verbose_name='第三阶段计划')),
                ('phase4_plan', models.TextField(blank=True, null=True, verbose_name='第四阶段计划')),
                ('hr_requirements', models.TextField(blank=True, null=True, verbose_name='人力资源需求')),
                ('financial_requirements', models.TextField(blank=True, null=True, verbose_name='财务资源需求')),
                ('technical_requirements', models.TextField(blank=True, null=True, verbose_name='技术资源需求')),
                ('market_risks', models.TextField(blank=True, null=True, verbose_name='市场风险')),
                ('competition_risks', models.TextField(blank=True, null=True, verbose_name='竞争风险')),
                ('credit_risks', models.TextField(blank=True, null=True, verbose_name='客户信用风险')),
                ('technical_risks', models.TextField(blank=True, null=True, verbose_name='技术风险')),
                ('monitoring_plan', models.TextField(blank=True, null=True, verbose_name='监督与评估方案')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annual_plans', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'verbose_name': '年度计划',
                'verbose_name_plural': '年度计划',
            },
        ),
        migrations.CreateModel(
            name='MonthlyReport',
            fields=[
                ('report_id', models.AutoField(primary_key=True, serialize=False, verbose_name='报表编号')),
                ('month', models.DateField(verbose_name='报表月份')),
                ('team', models.CharField(blank=True, max_length=100, null=True, verbose_name='所属团队')),
                ('monthly_sales', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='本月销售额')),
                ('equipment_sold', models.IntegerField(blank=True, null=True, verbose_name='本月销售设备数量')),
                ('equipment_details', models.JSONField(blank=True, null=True, verbose_name='不同型号设备销售数量明细')),
                ('sales_analysis', models.TextField(blank=True, null=True, verbose_name='销售业绩分析')),
                ('new_clients_count', models.IntegerField(blank=True, null=True, verbose_name='新客户开发数量')),
                ('new_clients_details', models.JSONField(blank=True, null=True, verbose_name='新客户名单及简要情况')),
                ('new_client_challenges', models.JSONField(blank=True, null=True, verbose_name='新客户开发困难及解决方案')),
                ('existing_clients_visited', models.IntegerField(blank=True, null=True, verbose_name='老客户回访数量')),
                ('existing_client_feedback', models.TextField(blank=True, null=True, verbose_name='老客户反馈问题及解决情况')),
                ('repeat_purchase_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='老客户复购金额')),
                ('repeat_purchase_details', models.JSONField(blank=True, null=True, verbose_name='复购客户名单及复购情况')),
                ('promotion_activities', models.TextField(blank=True, null=True, verbose_name='市场推广活动参与情况')),
                ('strategy_implementation', models.TextField(blank=True, null=True, verbose_name='销售策略实施情况')),
                ('industry_trends', models.TextField(blank=True, null=True, verbose_name='行业动态')),
                ('competitor_analysis', models.TextField(blank=True, null=True, verbose_name='竞争对手分析')),
                ('customer_demand_changes', models.TextField(blank=True, null=True, verbose_name='客户需求变化')),
                ('training_progress', models.TextField(blank=True, null=True, verbose_name='培训与学习情况')),
                ('skill_improvements', models.TextField(blank=True, null=True, verbose_name='工作技能提升表现')),
                ('product_challenges', models.TextField(blank=True, null=True, verbose_name='产品方面问题')),
                ('market_challenges', models.TextField(blank=True, null=True, verbose_name='市场方面问题')),
                ('customer_challenges', models.TextField(blank=True, null=True, verbose_name='客户方面问题')),
                ('personal_challenges', models.TextField(blank=True, null=True, verbose_name='个人方面问题')),
                ('challenge_solutions', models.TextField(blank=True, null=True, verbose_name='解决措施及效果评估')),
                ('next_month_sales_target', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='下月销售额目标')),
                ('next_month_equipment_target', models.IntegerField(blank=True, null=True, verbose_name='下月销售设备数量目标')),
                ('next_month_new_clients_target', models.IntegerField(blank=True, null=True, verbose_name='下月新客户开发数量目标')),
                ('next_month_repeat_purchase_target', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='下月老客户复购金额目标')),
                ('key_tasks', models.TextField(blank=True, null=True, verbose_name='重点工作安排')),
                ('hr_needs', models.TextField(blank=True, null=True, verbose_name='人力资源需求')),
                ('financial_needs', models.TextField(blank=True, null=True, verbose_name='财务资源需求')),
                ('technical_needs', models.TextField(blank=True, null=True, verbose_name='技术资源需求')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_reports', to=settings.AUTH_USER_MODEL, verbose_name='填报人')),
            ],
            options={
                'verbose_name': '月度报表',
                'verbose_name_plural': '月度报表',
                'unique_together': {('reporter', 'month')},
            },
        ),
    ]
